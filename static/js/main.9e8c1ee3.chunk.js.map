{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQustions","setCurrentQustions","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextquestion","handleAnswerButtonClick","rootElement","document","getElementById","createRoot","render"],"mappings":"iLAGe,SAASA,IACtB,IAAMC,EAAY,CAChB,CACEC,aAAc,iCACdC,cAAe,CACb,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGvC,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAG3C,CACEH,aAAc,2CACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAG1C,CACEH,aAAc,yCACdC,cAAe,CACb,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAIpC,EAA8CC,mBAAS,GAAE,mBAAlDC,EAAe,KAAEC,EAAkB,KAC1C,EAAkCF,oBAAS,GAAM,mBAA1CG,EAAS,KAAEC,EAAY,KAC9B,EAA0BJ,mBAAS,GAAE,mBAA9BK,EAAK,KAAEC,EAAQ,KActB,OACE,qBAAKC,UAAU,MAAK,SAGjBJ,EACC,sBAAKI,UAAU,gBAAe,wBAChBF,EAAK,WAAUV,EAAUa,UAGvC,qCACE,sBAAKD,UAAU,mBAAkB,UAC/B,sBAAKA,UAAU,iBAAgB,UAC7B,6CAAgBN,EAAkB,KAAS,IAAEN,EAAUa,UAEzD,qBAAKD,UAAU,gBAAe,SAC3BZ,EAAUM,GAAiBL,kBAGhC,qBAAKW,UAAU,iBAAgB,SAC5BZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAY,OACzD,wBACEC,QAAS,kBAjCS,SAACZ,IACb,IAAdA,GACFO,EAASD,EAAQ,GAEnB,IAAMO,EAAeX,EAAkB,EACnCW,EAAejB,EAAUa,OAC3BN,EAAmBU,GAEnBR,GAAa,EAEjB,CAuB6BS,CAAwBH,EAAaX,UAAU,EAAC,SAE9DW,EAAaZ,YACP,UAOvB,CCpFA,IAAMgB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,eAAC,aAAU,WACT,2CACA,cAACxB,EAAG,O","file":"static/js/main.9e8c1ee3.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const questions = [\n    {\n      questionText: \"What is the capital of France?\",\n      answerOptions: [\n        { answerText: \"New York\", isCorrect: false },\n        { answerText: \"London\", isCorrect: false },\n        { answerText: \"Paris\", isCorrect: true },\n        { answerText: \"Dublin\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"Who is CEO of Tesla?\",\n      answerOptions: [\n        { answerText: \"Jeff Bezos\", isCorrect: false },\n        { answerText: \"Elon Musk\", isCorrect: true },\n        { answerText: \"Bill Gates\", isCorrect: false },\n        { answerText: \"Tony Stark\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"The iPhone was created by which company?\",\n      answerOptions: [\n        { answerText: \"Apple\", isCorrect: true },\n        { answerText: \"Intel\", isCorrect: false },\n        { answerText: \"Amazon\", isCorrect: false },\n        { answerText: \"Microsoft\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"How many Harry Potter books are there?\",\n      answerOptions: [\n        { answerText: \"1\", isCorrect: false },\n        { answerText: \"4\", isCorrect: false },\n        { answerText: \"6\", isCorrect: false },\n        { answerText: \"7\", isCorrect: true }\n      ]\n    }\n  ];\n  const [currentQustions, setCurrentQustions] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n    const nextquestion = currentQustions + 1;\n    if (nextquestion < questions.length) {\n      setCurrentQustions(nextquestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQustions + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQustions].questionText}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQustions].answerOptions.map((answerOption) => (\n              <button\n                onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <h1>Quizz App</h1>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}